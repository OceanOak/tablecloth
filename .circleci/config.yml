version: 2.1
jobs:
  documentation-generator-build:
    docker:
      - image: ocaml/opam:ubuntu-20.04-ocaml-4.12
    environment:
      CI: true
    working_directory: ~/repo
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
            - v3-docs-{{ .Branch }}-{{ checksum "tablecloth-native.opam" }}
            - v3-docs-{{ .Branch }}-
            - v3-docs-dependencies-
      # m4 is a system dependency required lots of packages
      # nodejs and npm is needed to generate rescript ocamldoc
      - run: sudo apt-get update
      - run: sudo apt-get install -y m4 nodejs npm
      - run: mkdir ~/.npm-global
      - run: npm config set prefix '~/.npm-global'
      - run: npm install -g esy
      - run: cd ocamldoc-json-generator && make init-node
      - run: cd ocamldoc-json-generator && ~/.npm-global/bin/esy
      - run: cd ocamldoc-json-generator && make rescript-interfaces
      - run: cd ocamldoc-json-generator && make doc
      # Check that model.json has been regenerated when there are changes in the interface files
      - run: git diff --exit-code website/model.json
      - save_cache:
          key: v3-native-dependencies-{{ .Branch }}-{{ checksum "tablecloth-native.opam" }}
          paths:
            - ~/.opam

  website-build:
    docker:
      - image: cimg/node:16.6.0
    environment:
      CI: true
      NODE_ENV: production
    working_directory: ~/repo/website
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
            - v1-website-dependencies-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - v1-website-dependencies-{{ .Branch }}-
            - v1-website-dependencies-
      - run: npm install
      - run: npm run build
      - save_cache:
          key: v1-website-dependencies-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/repo/website/node_modules
      - persist_to_workspace:
          root: ~/repo/website
          paths:
            - public

  website-deploy:
    docker:
      - image: cimg/node:16.6.0
    environment:
      CI: true
      NODE_ENV: production
    working_directory: ~/repo/website
    steps:
      - checkout:
          path: ~/repo/website
      - attach_workspace:
          at: ~/repo/website/public
      - run:
          name: Download dark-cli
          command: curl -O https://dark-cli.storage.googleapis.com/latest/dark-cli-linux
      - run:
          name: Make dark-cli Executable
          command: chmod +x dark-cli-linux
      - run:
          name: Execute dark-cli to Deploy Static Assets
          command: ./dark-cli-linux --canvas tablecloth --password "$DEPLOY_PWD" --user $DEPLOY_USR ~/repo/website/public/*

workflows:
  version: 2
  build:
    jobs:
      # - documentation-generator-build
      - website-build
      - website-deploy:
          requires:
            - website-build
          filters:
            branches:
              only: main

